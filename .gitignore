const express = require('express');
const mongoose = require('mongoose');
const bodyParser = require('body-parser');
const jwt = require('jsonwebtoken');
const redis = require('redis');

const app = express();
const router = express.Router();
const port = process.env.PORT || 3000;

// Connect to MongoDB
mongoose.connect('mongodb://localhost:27017/myapp', { useNewUrlParser: true });

// Create Redis client
const client = redis.createClient({ host: 'localhost', port: 6379 });

// Middleware
app.use(bodyParser.urlencoded({ extended: true }));
app.use(bodyParser.json());

// Routes
router.get('/posts', authenticateToken, getPosts);
router.post('/posts', authenticateToken, createPost);
router.delete('/posts/:postId', authenticateToken, deletePost);
router.put('/posts/:postId', authenticateToken, updatePost);
router.get('/users', getUsers);
router.post('/users', createUser);
router.delete('/users/:userId', authenticateToken, deleteUser);
router.put('/users/:userId', authenticateToken, updateUser);

// Handlers
function authenticateToken(req, res, next) {
  // Verify JWT token
  const authHeader = req.headers['authorization'];
  const token = authHeader && authHeader.split(' ')[1];
  if (token == null) return res.sendStatus(401);

  jwt.verify(token, process.env.ACCESS_TOKEN_SECRET, (err, user) => {
    if (err) return res.sendStatus(403);
    req.user = user;
    next();
  });
}

function getPosts(req, res) {
  // Get posts from MongoDB
  // Replace createdBy with user details
  // Replace comments.sentBy with user details
  // Replace comments.liked with user details
  res.json(posts);
}

function createPost(req, res) {
  // Create new post in MongoDB
  res.json(post);
}

function deletePost(req, res) {
  // Delete post from MongoDB
  res.sendStatus(204);
}

function updatePost(req, res) {
  // Update post in MongoDB
  res.json(post);
}

function getUsers(req, res) {
  // Get users from MongoDB
  res.json(users);
}

function createUser(req, res) {
  // Create new user in MongoDB
  res.json(user);
}

function deleteUser(req, res) {
  // Delete user from MongoDB
  res.sendStatus(204);
}

function updateUser(req, res) {
  // Update user in MongoDB
  res.json(user);
}

// Start server
app.use('/api', router);
app.listen(port, () => {
  console.log(`Server started on port ${port}`);
});
